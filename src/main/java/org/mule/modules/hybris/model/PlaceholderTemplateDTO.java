//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.11.29 at 12:35:53 PM GMT 
//


package org.mule.modules.hybris.model;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for placeholderTemplateDTO complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="placeholderTemplateDTO">
 *   &lt;complexContent>
 *     &lt;extension base="{}itemDTO">
 *       &lt;sequence>
 *         &lt;element name="alternativeMediaExpression" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="code" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="cometConfig" type="{}cometConfigurationDTO" minOccurs="0"/>
 *         &lt;element name="displayNamePattern" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="layoutTemplates" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="abstractLayoutTemplate" type="{}abstractLayoutTemplateDTO" maxOccurs="unbounded" minOccurs="0"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="placeholders" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element ref="{}placeholder" maxOccurs="unbounded" minOccurs="0"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="previewTemplate" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="type" type="{}composedTypeDTO" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "placeholderTemplateDTO", propOrder = {
    "alternativeMediaExpression",
    "code",
    "cometConfig",
    "displayNamePattern",
    "layoutTemplates",
    "placeholders",
    "previewTemplate",
    "type"
})
public class PlaceholderTemplateDTO
    extends ItemDTO
{

    protected String alternativeMediaExpression;
    protected String code;
    protected CometConfigurationDTO cometConfig;
    protected String displayNamePattern;
    protected PlaceholderTemplateDTO.LayoutTemplates layoutTemplates;
    protected PlaceholderTemplateDTO.Placeholders placeholders;
    protected String previewTemplate;
    protected ComposedTypeDTO type;

    /**
     * Gets the value of the alternativeMediaExpression property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAlternativeMediaExpression() {
        return alternativeMediaExpression;
    }

    /**
     * Sets the value of the alternativeMediaExpression property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAlternativeMediaExpression(String value) {
        this.alternativeMediaExpression = value;
    }

    /**
     * Gets the value of the code property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCode() {
        return code;
    }

    /**
     * Sets the value of the code property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCode(String value) {
        this.code = value;
    }

    /**
     * Gets the value of the cometConfig property.
     * 
     * @return
     *     possible object is
     *     {@link CometConfigurationDTO }
     *     
     */
    public CometConfigurationDTO getCometConfig() {
        return cometConfig;
    }

    /**
     * Sets the value of the cometConfig property.
     * 
     * @param value
     *     allowed object is
     *     {@link CometConfigurationDTO }
     *     
     */
    public void setCometConfig(CometConfigurationDTO value) {
        this.cometConfig = value;
    }

    /**
     * Gets the value of the displayNamePattern property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayNamePattern() {
        return displayNamePattern;
    }

    /**
     * Sets the value of the displayNamePattern property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayNamePattern(String value) {
        this.displayNamePattern = value;
    }

    /**
     * Gets the value of the layoutTemplates property.
     * 
     * @return
     *     possible object is
     *     {@link PlaceholderTemplateDTO.LayoutTemplates }
     *     
     */
    public PlaceholderTemplateDTO.LayoutTemplates getLayoutTemplates() {
        return layoutTemplates;
    }

    /**
     * Sets the value of the layoutTemplates property.
     * 
     * @param value
     *     allowed object is
     *     {@link PlaceholderTemplateDTO.LayoutTemplates }
     *     
     */
    public void setLayoutTemplates(PlaceholderTemplateDTO.LayoutTemplates value) {
        this.layoutTemplates = value;
    }

    /**
     * Gets the value of the placeholders property.
     * 
     * @return
     *     possible object is
     *     {@link PlaceholderTemplateDTO.Placeholders }
     *     
     */
    public PlaceholderTemplateDTO.Placeholders getPlaceholders() {
        return placeholders;
    }

    /**
     * Sets the value of the placeholders property.
     * 
     * @param value
     *     allowed object is
     *     {@link PlaceholderTemplateDTO.Placeholders }
     *     
     */
    public void setPlaceholders(PlaceholderTemplateDTO.Placeholders value) {
        this.placeholders = value;
    }

    /**
     * Gets the value of the previewTemplate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPreviewTemplate() {
        return previewTemplate;
    }

    /**
     * Sets the value of the previewTemplate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPreviewTemplate(String value) {
        this.previewTemplate = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link ComposedTypeDTO }
     *     
     */
    public ComposedTypeDTO getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link ComposedTypeDTO }
     *     
     */
    public void setType(ComposedTypeDTO value) {
        this.type = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="abstractLayoutTemplate" type="{}abstractLayoutTemplateDTO" maxOccurs="unbounded" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "abstractLayoutTemplate"
    })
    public static class LayoutTemplates {

        protected List<AbstractLayoutTemplateDTO> abstractLayoutTemplate;

        /**
         * Gets the value of the abstractLayoutTemplate property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the abstractLayoutTemplate property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAbstractLayoutTemplate().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link AbstractLayoutTemplateDTO }
         * 
         * 
         */
        public List<AbstractLayoutTemplateDTO> getAbstractLayoutTemplate() {
            if (abstractLayoutTemplate == null) {
                abstractLayoutTemplate = new ArrayList<AbstractLayoutTemplateDTO>();
            }
            return this.abstractLayoutTemplate;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element ref="{}placeholder" maxOccurs="unbounded" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "placeholder"
    })
    public static class Placeholders {

        protected List<PlaceholderDTO> placeholder;

        /**
         * Gets the value of the placeholder property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the placeholder property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getPlaceholder().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link PlaceholderDTO }
         * 
         * 
         */
        public List<PlaceholderDTO> getPlaceholder() {
            if (placeholder == null) {
                placeholder = new ArrayList<PlaceholderDTO>();
            }
            return this.placeholder;
        }

    }

}
